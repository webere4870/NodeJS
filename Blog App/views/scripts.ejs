<script>

    let socket;

    $("#message").click(async (evt)=>
    {
        let username = location.pathname.split(`/`)[2]
        let chatData = await fetch(`/chat/${username}`)
        location.href = `/chat#${username}`
    })

    $(async function(evt)
    {
        if(location.pathname.includes("chat"))
        {
            if(location.hash)
            {
                let username = location.hash.substring(1, location.hash.length)
                let chatData = await fetch(`/chat/${username}`)
                let json = await chatData.json()
                openSocket(json)
            }
        }
    })

    $('#followBtn').click(async (evt)=>
    {
        let arr = location.pathname.split('/')
        let data = {};
        if($("#followBtn").hasClass("unfollowed"))
        {
            data.add = true;
        }
        else
        {
            data.add = false;
        }
        let response = await fetch(`/follow/${arr[2]}`,
        {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(data)
        })
        location.reload()
    })

    $('#search').focus(()=>
    {
        $("#dropBox").slideDown(250)
    })

    $('#dropBox .closeBtn').click(()=>
    {
        $('#dropBox').slideUp(500)
    })
    
    $('.search').focus((evt)=>
    {
        $('#dropbox').slideToggle(250);
    })

    $('.messageQuery #dropBox a').click((evt)=>
    {
        
    })

    $('#search').on('input', ()=>
    {
        console.log("here")
    })

    $('#dropBox h1').click((evt)=>
    {
        $("#searchSelect").attr("id", "")
        $(evt.currentTarget).attr("id", "searchSelect")
    })

    // $('#search').click((evt)=>
    // {
    //     let h1 = document.createElement('h1')
    //     h1.textContent = "gay"
    //     document.querySelector('#searchBox').append(h1)
    // })

    $('.searchOptions').click((evt)=>
    {
        $('#selectedSearch').attr("id", "");
        $(evt.currentTarget).attr("id", "selectedSearch")
    })

    /*document.addEventListener("DOMContentLoaded", (evt)=>
    {
        let mySelector = "."+ $('#helper').text().split(" ")[1];
        console.log(mySelector)
        let temp = document.querySelectorAll(mySelector)[0].parentNode
        temp.setAttribute("id", "selectedSquare")
    })*/
    async function updateProfile(username)
    {
        let className = $('#selectedSquare > i').attr("class")
        let biography = $('#biography').val()
        let color = $('#color').val()
        console.log(username)
        let response  = await fetch('/profile/settings', 
        {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({username: username, icon: className, biography: biography, color: color})
        })
        let json = await response.json();
        window.location.href = "/profile/"+username;
    }

    $('.iconSquare').click((evt)=>
    {
        $('#selectedSquare').attr("id", "");
        $(evt.currentTarget).attr("id", "selectedSquare")
    })

    function toggle(query)
    {
        $(query).toggle()
    }

    $('#messageSearchBtn').click((evt)=>
    {
        queryByUser();
    })

    async function queryType()
    {
        let type = $('#searchSelect').text();
        if(type == "Articles")
        {
            queryByArticle()
        }
        else
        {
            queryByUser()
        }
    }

    async function queryByArticle()
    {
        let search = document.querySelector('#search')
        let newQuery = await fetch('/search/'+search.value)
        let {data: articles} = await newQuery.json()
        console.log(articles)
        let parent = document.querySelector('#dropBox .colFlex')
        $('.listing').remove()
        for(let counter = 0; counter < articles.length; counter++)
        {
            console.log("herefa")
            let card = document.createElement('div')
            card.className = "card"
            let secondCard = document.createElement('div')
            secondCard.classList.add('colFlex')
            secondCard.classList.add('leftCard')
            let thirdCard = document.createElement('div')
            thirdCard.classList.add('innerCard')
            thirdCard.classList.add('colFlex')
            let i = document.createElement('img')
            i.className = "profilePicture1"
            i.src=`data:${articles[counter].mimetype};base64,${articles[counter].b64}`;
            thirdCard.appendChild(i)
            let a = document.createElement('a')
            a.textContent = articles[counter].username
            a.style = "margin-top: 8px;"
            a.href = `/profile/${articles[counter].username}`
            a.classList.add("hoverable")
            thirdCard.appendChild(a)
            let p = document.createElement('p')
            p.className = "date"
            p.textContent = articles[counter].date
            thirdCard.appendChild(p)
            secondCard.appendChild(thirdCard)
            card.appendChild(secondCard)
            console.log("here f")
            let overLink = document.createElement('a');
            overLink.href = "/article/"+articles[counter].title
            let rightCard = document.createElement('div')
            rightCard.classList.add("rightCard")
            rightCard.classList.add("colFlex")
            let h2 = document.createElement('h2')
            h2.className= "aquaText"
            h2.style = "text-align: center;"
            h2.textContent = articles[counter].title;
            rightCard.appendChild(h2)
            let p2 = document.createElement('p')
            p2.className = "caption"
            p2.textContent = articles[counter].caption
            rightCard.appendChild(p2);
            let rowFlex = document.createElement('div')
            rowFlex.className = "rowFlex";
            console.log("here5")
            if(articles[counter].keywords)
            {
                for(let inner = 0; inner < articles[counter].keywords.length; inner++)
                {
                    let temp = document.createElement('div')
                    temp.classList.add('keywords')
                    temp.classList.add('colFlex')
                    let tempP = document.createElement('p')
                    tempP.style = "margin: 0; padding: 0;"
                    tempP.textContent = articles[counter].keywords[inner]
                    temp.appendChild(tempP)
                    rowFlex.appendChild(temp)
                }
            }
            console.log("here")
            rightCard.appendChild(rowFlex)
            overLink.appendChild(rightCard)
            card.appendChild(overLink)
            document.querySelector('#dropBox .colFlex').appendChild(card)
        }
        /*for(let temp of data)
        {
            let img = document.createElement('img')
            img.className = "profilePicture1"
            img.src=`data:${temp.mimetype};base64,${temp.b64}`;
            parent.append(img)
        }*/
    }

    let messageUser = document.querySelectorAll('.messageUser')
    for(let temp of messageUser)
    {
        temp.addEventListener("click", ()=>
        {
            console.log("Here temper")
        })
    }

    $(document).on('click', '.messageThread', async function(evt)
    {
        clearChat()
        let identifyUsername = $(evt.currentTarget).find('h2').text()
        let chatData = await fetch(`/chat/${identifyUsername}`)
        let json = await chatData.json()
        location.href = `/chat/#${identifyUsername}`
        if(socket)
        {
            socket.emit('end')
        }
        openSocket(json)
    })

    $(document).on('click', '.messageUser', async function(evt) {
        clearChat()
        let otherUsername = $(evt.currentTarget).text().trim()
        let chatData = await fetch(`/chat/${otherUsername}`)
        let json = await chatData.json();
        location.href = `/chat/#${otherUsername}`
        /*let {messages} = json
        console.log(messages)
        if(messages.length == 0)
        {
            let profileForThread = await fetch(`/chat/profile/${otherUsername}`)
            let {mimetype, b64} = await profileForThread.json()
            let parent = document.querySelector('#messageList')
            let messageThread = document.createElement('div')
            messageThread.classList.add("messageThread")
            messageThread.classList.add("hoverable")
            let img = document.createElement('img')
            img.src=`data:${mimetype};base64,${b64}`;
            img.className = "profilePicture1"
            let h2 = document.createElement('h2')
            h2.classList.add("usernameSelector")
            h2.textContent = otherUsername
            messageThread.appendChild(img)
            messageThread.appendChild(h2)
            parent.appendChild(messageThread)
        }
        openSocket(json)*/
    });

    function clearChat()
    {
        location.hash = ""
        if(location.hash)
        {
            location.pathname = "/chat"
            
        }
        let messageThreads = document.querySelectorAll('.message')
        for(let temp of messageThreads)
        {
            temp.remove()
        }
    }

    async function openSocket(json)
    {
        let currentUser = json.initiatingUser
        let userData;
        let joinString = "";
        for(let temp of json.users)
        {
            joinString += temp;
        }
        socket = null;
        socket = io('http://localhost:5050')
        socket.removeAllListeners()
        socket.emit('joinRoom', {roomName: joinString, initiatingUser: json.initiatingUser, users: json.users})
        socket.on('message', (data)=>
        {
            if(data.text == "")
            {

            }
            else{
                postMessage(userData, data.username, data.text, data.time)
            }
            
        })

        $('#messageBtn').click((evt)=>
        {
            socket.emit('message', {username: currentUser, text: $('#messageBox').val()})
            $('#messageBox').val("")
        })

        socket.on('setupData', (data)=>
        {
            userData = data.profilePictureData;
            for(let temp of json.messages)
            {
                postMessage(userData, temp.username, temp.text, temp.time)
            }
        })
    }

    function postMessage(userData, username, text, time)
    {
                let parent = document.querySelector("#chatBox")
                let incomingMessage = document.createElement('div')
                incomingMessage.classList.add('message')
                let a = document.createElement('a')
                a.href = `/profile/${username}`
                a.textContent = username
                incomingMessage.appendChild(a)
                let img = document.createElement('img')
                img.className = "profilePicture1"
                let b64;
                let mimetype;
                for(let joinUsernameToImg of userData)
                {
                    if(joinUsernameToImg.username === username)
                    {
                        mimetype = joinUsernameToImg.mimetype
                        b64 = joinUsernameToImg.b64
                    }
                }

                img.src=`data:${mimetype};base64,${b64}`;
                incomingMessage.appendChild(img)
                let p = document.createElement('p')
                p.textContent = text
                incomingMessage.appendChild(p)
                let dateTime = document.createElement('p')
                dateTime.textContent = time
                incomingMessage.appendChild(dateTime)
                parent.appendChild(incomingMessage)
                parent.scrollTop = parent.scrollHeight;
    }

    async function queryByUser()
    {
        let search = document.querySelector('#search')
        let newQuery = await fetch('/searchUser/'+search.value)
        let userTemp = await newQuery.json()
        let parent = document.querySelector('#dropBox .colFlex')
        $('.listing').each().remove()
        for(let temp of userTemp.data)
        {
            let searchParam = location.pathname;
            console.log(searchParam)
            if(searchParam.includes('chat'))
            {
                let div = document.createElement('div')
                div.className = "listing"
                let a = document.createElement('a')
                a.textContent = temp.username;
                a.classList.add("messageUser")
                a.classList.add("hoverable")
                let img = document.createElement('img')
                img.className = "profilePicture1"
                img.src=`data:${temp.mimetype};base64,${temp.b64}`;
                div.append(img);
                div.append(a)
                parent.append(div)
            }
            else
            {
                let div = document.createElement('div')
                div.className = "listing"
                let a = document.createElement('a')
                a.textContent = temp.username;
                a.href = `/profile/${temp.username}`;
                let img = document.createElement('img')
                img.className = "profilePicture1"
                img.src=`data:${temp.mimetype};base64,${temp.b64}`;
                div.append(img);
                div.append(a)
                parent.append(div)
            }
            
        }
        /*
        let {data} = articlesTemp
        let users = data
        let removeArticles = document.querySelectorAll('#grounded > .card')
        for(let temp of removeArticles)
        {
            temp.remove()
        }
        console.log(users)
        for(let temp of users)
        {
            let a = document.createElement('a')
            a.href = "/profile/"+temp.username
            let userCard = document.createElement('div')
            userCard.className = "userCard hoverable"
            let userIcon = document.createElement('div')
            userIcon.className = "userIcon"
            let i = document.createElement('i')
            i.className = temp.icon;
            userIcon.appendChild(i)
            userCard.appendChild(userIcon)
            let p = document.createElement('p')
            p.href = "/profile/"+temp.username
            p.textContent = temp.username
            userCard.appendChild(p)
            a.appendChild(userCard)
            document.querySelector('#explore').appendChild(a)
        }
        */
    }
    /*
    async function query (articles)
    {
        let removeArticles = document.querySelectorAll('.articleHolder > a')
        for(let temp of removeArticles)
        {
            temp.remove()
        }
        for(let counter = 0; counter < articles.length; counter++)
        {
            console.log("herefa")
            let card = document.createElement('div')
            card.className = "card"
            let secondCard = document.createElement('div')
            secondCard.classList.add('colFlex')
            secondCard.classList.add('leftCard')
            let thirdCard = document.createElement('div')
            thirdCard.classList.add('innerCard')
            thirdCard.classList.add('colFlex')
            let i = document.createElement('i')
            i.style = "color: white; font-size: 60px;"
            i.className = "far fa-user-circle";
            thirdCard.appendChild(i)
            let h3 = document.createElement('h3')
            h3.textContent = articles[counter].author
            h3.style = "margin-top: 8px;"
            thirdCard.appendChild(h3)
            let p = document.createElement('p')
            p.className = "date"
            p.textContent = articles[counter].date
            thirdCard.appendChild(p)
            secondCard.appendChild(thirdCard)
            card.appendChild(secondCard)
            console.log("here f")
            let overLink = document.createElement('a');
            overLink.href = "/article/"+articles[counter].title
            let rightCard = document.createElement('div')
            rightCard.classList.add("rightCard")
            rightCard.classList.add("colFlex")
            let h2 = document.createElement('h2')
            h2.className= "aquaText"
            h2.style = "text-align: center;"
            h2.textContent = articles[counter].title;
            rightCard.appendChild(h2)
            let p2 = document.createElement('p')
            p2.className = "caption"
            p2.textContent = articles[counter].caption
            rightCard.appendChild(p2);
            let rowFlex = document.createElement('div')
            rowFlex.className = "rowFlex";
            console.log("here5")
            if(articles[counter].keywords)
            {
                for(let inner = 0; inner < articles[counter].keywords.length; inner++)
                {
                    let temp = document.createElement('div')
                    temp.classList.add('keywords')
                    temp.classList.add('colFlex')
                    let tempP = document.createElement('p')
                    tempP.style = "margin: 0; padding: 0;"
                    tempP.textContent = articles[counter].keywords[inner]
                    temp.appendChild(tempP)
                    rowFlex.appendChild(temp)
                }
            }
            console.log("here")
            rightCard.appendChild(rowFlex)
            overLink.appendChild(rightCard)
            card.appendChild(overLink)
            document.querySelector('#articleHolder').appendChild(card)
        }
    } 
    */
    
    /*
    async function query ()
    {
        let search = document.querySelector('#search')
        let newQuery = await fetch('/search/'+search.value)
        let articlesTemp = await newQuery.json()
        let {data} = articlesTemp
        let articles = data
        console.log(articles)
        let removeArticles = document.querySelectorAll('.articleHolder > a')
        for(let temp of removeArticles)
        {
            temp.remove()
        }
        for(let counter = 0; counter < articles.length; counter++)
        {
            console.log("herefa")
            let a = document.createElement('a')
            a.href = "/article/"+articles[counter].title
            let card = document.createElement('div')
            card.className = "card"
            let secondCard = document.createElement('div')
            secondCard.classList.add('colFlex')
            secondCard.classList.add('leftCard')
            let thirdCard = document.createElement('div')
            thirdCard.classList.add('innerCard')
            thirdCard.classList.add('colFlex')
            let i = document.createElement('i')
            i.style = "color: white; font-size: 60px;"
            i.className = "far fa-user-circle";
            thirdCard.appendChild(i)
            let h3 = document.createElement('h3')
            h3.textContent = articles[counter].author
            h3.style = "margin-top: 8px;"
            thirdCard.appendChild(h3)
            let p = document.createElement('p')
            p.className = "date"
            p.textContent = articles[counter].date
            thirdCard.appendChild(p)
            secondCard.appendChild(thirdCard)
            card.appendChild(secondCard)
            console.log("here f")
            let rightCard = document.createElement('div')
            rightCard.classList.add("rightCard")
            rightCard.classList.add("colFlex")
            let h2 = document.createElement('h2')
            h2.className= "aquaText"
            h2.style = "text-align: center;"
            h2.textContent = articles[counter].title;
            rightCard.appendChild(h2)
            let p2 = document.createElement('p')
            p2.className = "caption"
            p2.textContent = articles[counter].caption
            rightCard.appendChild(p2);
            let rowFlex = document.createElement('div')
            rowFlex.className = "rowFlex";
            console.log("here5")
            if(articles[counter].keywords)
            {
                for(let inner = 0; inner < articles[counter].keywords.length; inner++)
                {
                    let temp = document.createElement('div')
                    temp.classList.add('keywords')
                    temp.classList.add('colFlex')
                    let tempP = document.createElement('p')
                    tempP.style = "margin: 0; padding: 0;"
                    tempP.textContent = articles[counter].keywords[inner]
                    temp.appendChild(tempP)
                    rowFlex.appendChild(temp)
                }
            }
            console.log("here")
            rightCard.appendChild(rowFlex)
            card.appendChild(rightCard)
            a.appendChild(card)
            document.querySelector('#articleHolder').appendChild(a)
        }
        console.log("shouldnt")
    }
    */
    let newPost = async () =>
    {
        let title = f('#blogTitle')
        let caption = f('#blogCaption')
        let keywords = f('#blogKeywords')
        const keywordsArr = keywords.value.split(" ")
        const article = document.querySelector('#blogArticle')
        const date = new Date().toLocaleDateString('en-us', { weekday:"long", year:"numeric", month:"short", day:"numeric"})
        let response = await fetch('/write/newBlog', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({title: title.value, caption: caption.value, keywords: keywordsArr, article: article.value, date: date})
        })
        let json = await response.json()
        console.log(json);
        title.value =""
        keywords.value = ""
        article.value =""
        caption.value =""
    }

    const f = (query) => document.querySelector(query)

    const getLikes = async (title) =>
    {
        console.log("here");
        let response = await fetch('/likes/' + title, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({title: title})
        })
        console.log(response);
        let {likes} = await response.json();
        let likeCount = f('#likeCount')
        let newText = document.createTextNode(likes);
        likeCount.appendChild(newText);
    }

    const getArticle = async (title) =>
    {
        let article = await fetch('/article');
    }

    async function upLikes(title)
    {
        let iconDivs = document.querySelectorAll('.iconCircle');
        if(iconDivs[0].classList.contains("unliked"))
        {
            iconDivs[0].classList.toggle("unliked")
            iconDivs[0].classList.toggle("liked")
            iconDivs[0].querySelector('i').classList.toggle("likedI")
            let response = await fetch('/likes/' + title, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({title: title})
            })
            let {likes} = await response.json();
            let likeCount = document.querySelector('#likeCount')
            let newText = document.createTextNode(likes);
            likeCount.textContent = "";
            likeCount.appendChild(newText);
        }
        else
        {
            iconDivs[0].classList.toggle("unliked")
            iconDivs[0].classList.toggle("liked")
            iconDivs[0].querySelector('i').classList.toggle("likedI")
            let response = await fetch('/downLikes/' + title, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({title: title})
            })
            let {likes} = await response.json();
            console.log(likes);
            let likeCount = f('#likeCount')
            let newText = document.createTextNode(likes);
            likeCount.textContent = "";
            likeCount.appendChild(newText);
        }
    }

    function loadComments()
    {
        let myDiv = document.querySelectorAll('.colorMe')
        let xBtn = document.querySelectorAll('.closeBtn')
        xBtn[0].classList.toggle("hide")
        myDiv[0].classList.toggle("open");
    }

    async function postComm()
    {
        console.log("here")
        let response = await fetch('/newComment/' + title, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({title: title})
            })
        const newby = await response.json();
        console.log(newby);
    }

</script>

<!-- let newComment = document.querySelector('#newComment')
        let hiddenBox = document.querySelector('#hiddenBox')
        let object = {comment: newComment, title: hiddenBox.value}
        const response = await fetch('/newComment',
        {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(object)
        })
        const jsonn = await response.json();
        console.log(jsonn); -->